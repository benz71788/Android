<?xml version="1.0" encoding="utf-8"?>
<!--
    레이아웃 : ConstraintLayout
    안드로이드 스튜디오에서는 제약 레이아웃(ConstraintLayout)은 기본 레이아웃입니다.

    제약 조건 레이아웃은 뷰의 크기와 위치를 결정할 때 제약 조건을 사용한다는 것입니다.
    제약 조건이란 뷰가 레이아웃 안의 다른 요소와 어떻게 연결되는지 알려주는 것으로
    뷰의 연결점(Anchor Point - 원 모양으로 위, 아래, 왼쪽, 오른쪽에 존재)과 대상(Target)을 연결합니다.
    예로 버튼의 왼쪽을 부모 레이아웃과 연결할 경우 Target은 부모 레이아웃이 되고 버튼의 왼쪽 연결점을
    부모의 왼쪽 변면과 연결 할 수 있습니다.
    버튼이 레이아웃 안에서 어디에 위치하고 있는지 결정하려면 적어도 위쪽과 왼쪽이 연결되어 있어야 합니다.

    만약 위젯이나 레이아웃이 안드로이드 기본 API에 포함되어 있다면 그 위젯이나 레이아웃의 이름만
    입력하면 되지만 외부 라이브러리에서 불러온 것이라면 패키지 이름까ㅑ지 같이 입력해야 합니다.
    android.support.constraint.ConstraintLayout는 안드로이드 SDK에 나중에 추가되면서
    외부 라이브러리로 분류되어 있습니다.
    따라서 그 앞에 패키지 이름까지 기록한 것입니다.

    (1) xmlns:android
        안드로이드 기본 SDK에 포함되어 있는 속성을 사용합니다.
    (2) xmlns:app
        프로젝트에서 사용하는 외부 라이브러리에 포함되어 있는 속성을 사용합니다.
-->
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <!--
        가이드 라인 연결하기 - 뷰를 배치하기 위해 뷰그룹 내에 설정할 수 있는 기준선입니다.
        디자이너 도구의 위쪽에 있는 아이콘 중에서 [Guidelines]아이콘을 클릭합니다.
        [Add Vertical Guideline]메뉴를 선택합니다.
        버튼의 왼쪽 연결점과 가이드라인의 선과 연결해야 합니다.
        그리고 한 버튼의 위쪽 연결점을 그 위에 있는 버튼의 아래쪽 연결점과 연결할 때는
        버튼의 아래쪽 연결점을 정확히 가리켜야 합니다.

        Guideline 클래스는 외부 라이브러리에 포함되어있어
        패키지 이름 android.support.constraint를 함께 붙여줍니다.
        태그에는 필수 속성인 layout_width, layout_height이 들어가 있습니다.
        그 다음 가이드라인의 방향을 지정해야하는 orientation이 필수 속성이 됩니다.

        단위
        (1) px - 화면 픽셀 수
        (2) dp 또는 dip - 160dpi 화면을 기준으로 한 픽셀
            1인치당 160개의 점이 있는 디스플레이 화면에서 1dp는 1px와 같음
            1인치당 320개의 점이 있는 디스플레이 화면에서 1dp는 2px와 같음
            (density independent pixel)
        (3) sp 또는 sip - 텍스트 크기를 지정할 때 사용하는 단위로 가변 글꼴을 기준으로
            (scale independent pixel) 한 픽셀로 dp와 유사하나 글꼴의 설정에 따라 1sp당 픽셀수가 달라집니다.
            시스템 설정에서 텍스트 크기를 최대 크게로 설정하게 되는 UI 레이아웃을 정의할 때
            SP로 크기를 지정해놓은 TextView의 텍스트 그기가 영향을 받아 커집니다.
            반면에 TextView의 텍스트 크기를 DP로 설정하게 되면 시스템 설정의
            텍스트 크기 값의 변화에 상관없이 일정한 크기를 유지합니다.
    -->
    <android.support.constraint.Guideline
        android:id="@+id/guideline"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintGuide_begin="20dp" />

    <!--
        위젯 : Button
        android : id 속성은 뷰를 구분하는 구분자 역할을 합니다.
            (1) xml 레이아웃 파일에서 정의한 뷰를 자바 소스 파일에서 찾을 때 사용합니다.
            (2) xml 레이아웃 파일에서 뷰를 구분할 때 사용합니다.

        android:onClick="mOnClick" : 뷰를 클릭했을 때 호출될 메서드를 지정합니다.
        android:은 안드로이드의 기본 API에서 정의한 속성이라는 의미입니다.

        제약 레이아웃에서 하나의 뷰를 다른 뷰와 연결할 때 사용하는 xml 속서의 이름은
        다음과 같은 규칙을 갖습니다.
        app:layout_constraintStart_toStartOf="@+id/guideline"
        [형식]layout_constraint[소스뷰의 연결점]_[타깃뷰의 연결점]="[타깃뷰의 id]"
        예)app:layout_constraintStart_toStartOf="@+id/guideline"

        android:layout_marginLeft : 뷰의 왼쪽 여유 공간
        android:layout_marginTop : 뷰의 위쪽 여유 공간
        android:layout_margin : 뷰의 위, 아래, 왼쪽, 오른쪽 여유 공간

        우리나라의 영어는 왼쪽에서 오른쪽으로 읽습니다.
        이 경우 Start는 left, End는 right를 의미합니다.

        아랍어, 히브리어는 오른쪽에서 왼쪽으로 읽습니다.
        이 경우 Start는 right, End는 left를 의미합니다.
    -->


    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="8dp"
        android:layout_marginStart="8dp"
        android:layout_marginTop="64dp"
        android:text="버튼1"
        app:layout_constraintStart_toStartOf="@+id/guideline"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="8dp"
        android:layout_marginStart="8dp"
        android:layout_marginTop="36dp"
        android:text="버튼2"
        app:layout_constraintStart_toStartOf="@+id/guideline"
        app:layout_constraintTop_toBottomOf="@+id/button2" />

</android.support.constraint.ConstraintLayout>